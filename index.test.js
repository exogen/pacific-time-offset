const pacificTimeOffset = require('./index');

const { STANDARD_OFFSET, DAYLIGHT_OFFSET } = pacificTimeOffset;

describe('pacificTimeOffset', () => {
  it.each([
    '2014-03-09T10:00:00.000Z',
    '2014-03-10T00:00:00.000Z',
    '2014-03-15T00:00:00.000Z',
    '2019-03-10T10:00:00.000Z',
    '2019-03-17T07:00:00.000Z',
    '2019-11-01T07:00:00.000Z',
    '2019-11-02T07:00:00.000Z',
    '2019-11-03T07:00:00.000Z',
    '2019-11-03T07:00:00.000Z',
    '2019-11-03T08:59:59.000Z',
    '2020-03-08T10:00:00.000Z',
    '2020-03-08T10:00:00.000Z',
    '2020-06-01T00:00:00.000Z',
    '2020-10-20T00:00:00.000Z',
    '2020-11-01T00:00:00.000Z',
    '2020-11-01T08:00:00.000Z',
    '2020-11-01T08:59:59.999Z'
  ])('returns 420 on PDT date: %s', dateString => {
    expect(pacificTimeOffset(dateString)).toBe(DAYLIGHT_OFFSET);
  });

  it.each([
    '2014-03-08T08:00:00.000Z',
    '2014-03-09T08:00:00.000Z',
    '2014-03-09T09:00:00.000Z',
    '2014-03-09T09:59:59.999Z',
    '2019-03-01T08:00:00.000Z',
    '2019-03-02T10:00:00.000Z',
    '2019-03-09T12:00:00.000Z',
    '2019-03-10T08:00:00.000Z',
    '2019-03-10T09:00:00.000Z',
    '2019-03-10T09:59:59.999Z',
    '2019-11-03T09:00:00.000Z',
    '2019-11-03T10:00:00.000Z',
    '2019-11-04T00:00:00.000Z',
    '2020-01-01T00:00:00.000Z',
    '2020-02-15T23:59:59.000Z',
    '2020-03-08T09:00:00.000Z',
    '2020-03-08T09:59:59.999Z',
    '2020-11-01T09:00:00.000Z',
    '2020-11-01T10:00:00.000Z',
    '2020-11-02T00:00:00.000Z',
    '2020-12-01T00:00:00.000Z',
    '2020-12-31T23:59:59.999Z'
  ])('returns 480 on PST date: %s', dateString => {
    expect(pacificTimeOffset(dateString)).toBe(STANDARD_OFFSET);
  });
});
